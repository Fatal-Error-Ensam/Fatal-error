name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: club-website/package-lock.json

      - name: Install dependencies
        working-directory: club-website
        run: npm ci

      - name: Build and Export
        working-directory: club-website
        env:
          NODE_ENV: production
        run: |
          npm run build
          npm run export

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: club-website/out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

name: Deploy Fatal Error Website

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Run Linting
      run: npm run lint:check
      continue-on-error: false
      
    - name: Run Type Check
      run: npm run type-check
      continue-on-error: false
      
    - name: Build Next.js Application
      run: npm run build
      env:
        NODE_ENV: production
      
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
        
    # Optional: Deploy to Vercel (uncomment if you want Vercel deployment)
    # - name: Deploy to Vercel
    #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}
    #     working-directory: ./

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Run Security Audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Run Dependency Check
      uses: actions/dependency-review-action@v4
      if: github.event_name == 'pull_request'
